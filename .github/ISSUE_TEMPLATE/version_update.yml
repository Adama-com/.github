name: Process Version Update Form
on:
  issues:
    types: [opened]

jobs:
  process-form:
    if: contains(github.event.issue.labels.*.name, 'version-update')
    runs-on: ubuntu-latest
    steps:
      - name: Process form and update project
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PROJECT_TOKEN }}
          script: |
            // Get the current repository name
            const repository = context.repo.repo;
            console.log(`Processing form from repository: ${repository}`);
            
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const issueBody = issue.data.body;
            
            // Function to extract fields from the issue body
            function extractField(body, fieldName) {
              const regex = new RegExp(`### ${fieldName}\\s*([^#]*)`);
              const match = body.match(regex);
              return match ? match[1].trim() : '';
            }
            
            // Extract data from form
            const customer = extractField(issueBody, 'Customer Name');
            const version = extractField(issueBody, 'Version Number');
            const releaseDate = extractField(issueBody, 'Release Date');
            const status = extractField(issueBody, 'Status');
            const deployedBy = extractField(issueBody, 'Deployed By');
            const notes = extractField(issueBody, 'Notes');
            
            console.log(`Extracted data for ${customer} in ${repository}: version ${version}`);
            
            // Update your project here (implementation depends on your project structure)
            // ...
            
            // Comment on the issue with confirmation
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `âœ… Processed version update for **${customer}** in repository **${repository}**:
              
              - Version: ${version}
              - Release Date: ${releaseDate}
              - Status: ${status}
              - Deployed By: ${deployedBy}
              
              The global project board has been updated with this information.`
            });
            
            // Close the issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              state: 'closed'
            });
